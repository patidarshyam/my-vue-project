<template>
  <div>
    <div class="card">
      <div class="card-header">
        <h5 class="card-title">Employee Details</h5>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="form-group row">
              <label for="domain" class="col-sm-4 col-form-label text-right">Domain:</label>
              <div class="col-sm-8">
                <input id="domain" :value="employeeDetails.domain" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="group" class="col-sm-4 col-form-label text-right">Group:</label>
              <div class="col-sm-8">
                <input id="group" :value="employeeDetails.group" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="division" class="col-sm-4 col-form-label text-right">Division:</label>
              <div class="col-sm-8">
                <input id="division" :value="employeeDetails.division" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="area" class="col-sm-4 col-form-label text-right">Area:</label>
              <div class="col-sm-8">
                <input id="area" :value="employeeDetails.area" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="type" class="col-sm-4 col-form-label text-right">Type:</label>
              <div class="col-sm-8">
                <input id="type" :value="employeeDetails.type" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="category" class="col-sm-4 col-form-label text-right">Category:</label>
              <div class="col-sm-8">
                <input id="category" :value="employeeDetails.category" disabled class="form-control">
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-group row">
              <label for="district" class="col-sm-4 col-form-label text-right">District:</label>
              <div class="col-sm-8">
                <input id="district" :value="employeeDetails.district" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="citySalesManager" class="col-sm-4 col-form-label text-right">City Sales Manager:</label>
              <div class="col-sm-8">
                <input id="citySalesManager" :value="employeeDetails.citySalesManager" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="zone" class="col-sm-4 col-form-label text-right">Zone:</label>
              <div class="col-sm-8">
                <input id="zone" :value="employeeDetails.zone" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="specialRoles" class="col-sm-4 col-form-label text-right">Special Roles:</label>
              <div class="col-sm-8">
                <input id="specialRoles" :value="employeeDetails.specialRoles" disabled class="form-control">
              </div>
            </div>
            <div class="form-group row">
              <label for="status" class="col-sm-4 col-form-label text-right">Status:</label>
              <div class="col-sm-8">
                <input id="status" :value="employeeDetails.status" disabled class="form-control">
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="table-container mt-4">
      <div class="row">
        <div class="col-md-4">
          <h4>Employees</h4>
        </div>
        <div class="col-md-4">
          <div class="pagination-details">
            Page {{ currentPage }} of {{ totalPages }} ({{ totalItems }} items)
          </div>
        </div>
      </div>
      <div class="table-responsive">
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>Employee Number</th>
              <th>Employee Name</th>
              <th>Last Name</th>
              <th>First Name</th>
              <th>Effective Date</th>
              <th>Expiration Date</th>
              <th>Emp Payroll Status</th>
              <th>Job Title</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="employee in filteredEmployees" :key="employee.id">
              <td>{{ employee.employeeNumber }}</td>
              <td>{{ employee.employeeName }}</td>
              <td>{{ employee.lastName }}</td>
              <td>{{ employee.firstName }}</td>
              <td>{{ employee.effectiveDate }}</td>
              <td>{{ employee.expirationDate }}</td>
              <td>{{ employee.empPayrollStatus }}</td>
              <td>{{ employee.jobTitle }}</td>
            </tr>
          </tbody>
        </table>
      </div>
      <nav v-if="totalPages > 1" class="mt-3">
        <ul class="pagination pagination-sm justify-content-center">
          <li class="page-item" :class="{ 'disabled': currentPage === 1 }">
            <a class="page-link" href="#" @click="prevPage">
              Previous
            </a>
          </li>
          <li v-for="page in visiblePages" :key="page" class="page-item" :class="{ 'active': currentPage === page }">
            <a class="page-link" href="#" @click="gotoPage(page)">{{ page }}</a>
          </li>
          <li class="page-item" :class="{ 'disabled': currentPage === totalPages }">
            <a class="page-link" href="#" @click="nextPage">
              Next
            </a>
          </li>
        </ul>
      </nav>
    </div>
  </div>
</template>

<script>
import { employees } from './employee.js';
import { employeeDetails } from './employee-details.js';
export default {
  data() {
    return {
      employeeDetails: {},
      employees: [],
      currentPage: 1,
      itemsPerPage: 2
    };
  },
  mounted() {
    this.fetchEmployeeDetails();
    this.fetchEmployees();
  },
  computed: {
    filteredEmployees() {
      const startIndex = (this.currentPage - 1) * this.itemsPerPage;
      const endIndex = startIndex + this.itemsPerPage;
      return this.employees.slice(startIndex, endIndex);
    },
    totalItems() {
      return this.employees.length;
    },
    totalPages() {
      return Math.ceil(this.totalItems / this.itemsPerPage);
    },
    visiblePages() {
      const totalVisiblePages = 5;
      const halfVisiblePages = Math.floor(totalVisiblePages / 2);
      let startPage = this.currentPage - halfVisiblePages;
      if (startPage < 1) {
        startPage = 1;
      }
      let endPage = startPage + totalVisiblePages - 1;
      if (endPage > this.totalPages) {
        endPage = this.totalPages;
      }
      const visiblePages = [];
      for (let page = startPage; page <= endPage; page++) {
        visiblePages.push(page);
      }
      return visiblePages;
    }
  },
  methods: {
    fetchEmployees() {
      // Replace the URL with the actual API endpoint to fetch employee data
      this.employees = employees;
    },
    fetchEmployeeDetails() {
      // Replace the URL with the actual API endpoint to fetch employee details
      this.employeeDetails = employeeDetails;
    },
    gotoPage(page) {
      if (page >= 1 && page <= this.totalPages) {
        this.currentPage = page;
      }
    },
    prevPage() {
      if (this.currentPage > 1) {
        this.currentPage--;
      }
    },
    nextPage() {
      if (this.currentPage < this.totalPages) {
        this.currentPage++;
      }
    }
  }
};
</script>

<style scoped>
/* Add your custom styles here */
.table-container {
  margin-top: 20px;
}

.pagination-details {
  font-size: 14px;
  margin-top: 10px;
}

.card-header {
  background-color: #f8f9fa;
  border-bottom: none;
}

.card-title {
  margin-bottom: 0;
}

.card-body {
  padding: 1.5rem;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group.row {
  align-items: center;
}

.col-form-label {
  white-space: nowrap;
  font-weight: bold;
}

.text-right {
  text-align: right;
}

.table-bordered th,
.table-bordered td {
  border: 1px solid #dee2e6;
}

.table-striped tbody tr:nth-of-type(odd) {
  background-color: #f9f9f9;
}

.pagination {
  justify-content: center;
}

.pagination .page-item.disabled .page-link,
.pagination .page-item.active .page-link {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.pagination .page-link {
  color: #007bff;
  background-color: #fff;
  border: 1px solid #dee2e6;
  border-radius: 0.25rem;
  transition: all 0.3s;
}

.pagination .page-link:hover {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

</style>
